// <auto-generated />
using System;
using DataBase.MyDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230916110609_Mig_1")]
    partial class Mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBase.DbEntity.GameAccount", b =>
                {
                    b.Property<Guid>("GameAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GameAccountId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("GameAccounts");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameAccountGameRoom", b =>
                {
                    b.Property<Guid>("GameAccountGameRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GameCharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Pass")
                        .HasColumnType("bit");

                    b.HasKey("GameAccountGameRoomId");

                    b.HasIndex("GameAccountId");

                    b.HasIndex("GameCharacterId");

                    b.HasIndex("GameRoomId");

                    b.ToTable("GameAccountGameRooms");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameCharacter", b =>
                {
                    b.Property<Guid>("GameCharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiscriptionGameChar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GameCharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameClassId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameCharacterId");

                    b.HasIndex("GameAccountId");

                    b.HasIndex("GameClassId");

                    b.ToTable("GameCharacters");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameClass", b =>
                {
                    b.Property<Guid>("GameClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionGameClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameClassName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameClassId");

                    b.ToTable("GameClasss");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameRoom", b =>
                {
                    b.Property<Guid>("GameRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminRoomEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameRoomName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameRoomId");

                    b.ToTable("GameRooms");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameAccountGameRoom", b =>
                {
                    b.HasOne("DataBase.DbEntity.GameAccount", "GameAccount")
                        .WithMany("GameAccountGameRoom")
                        .HasForeignKey("GameAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId");

                    b.HasOne("DataBase.DbEntity.GameRoom", "GameRoom")
                        .WithMany("GameAccountGameRoom")
                        .HasForeignKey("GameRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameAccount");

                    b.Navigation("GameCharacter");

                    b.Navigation("GameRoom");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameCharacter", b =>
                {
                    b.HasOne("DataBase.DbEntity.GameAccount", "GameAccount")
                        .WithMany("gameCharacters")
                        .HasForeignKey("GameAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.GameClass", "GameClass")
                        .WithMany("GameCharacters")
                        .HasForeignKey("GameClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameAccount");

                    b.Navigation("GameClass");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameAccount", b =>
                {
                    b.Navigation("GameAccountGameRoom");

                    b.Navigation("gameCharacters");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameClass", b =>
                {
                    b.Navigation("GameCharacters");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameRoom", b =>
                {
                    b.Navigation("GameAccountGameRoom");
                });
#pragma warning restore 612, 618
        }
    }
}
