// <auto-generated />
using System;
using DataBase.MyDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230920165006_Mig_1")]
    partial class Mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBase.DbEntity.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MicrosoftAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MicrosoftAccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DataBase.DbEntity.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscriptionChar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameClassId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharacterId");

                    b.HasIndex("AccountId");

                    b.HasIndex("GameClassId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("DataBase.DbEntity.CharacterRoom", b =>
                {
                    b.Property<Guid>("CharacterRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Pass")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CharacterRoomId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("RoomId");

                    b.ToTable("CharacterRooms");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameClass", b =>
                {
                    b.Property<Guid>("GameClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionGameClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameClassId");

                    b.ToTable("GameClasss");
                });

            modelBuilder.Entity("DataBase.DbEntity.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("AccountId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DataBase.DbEntity.Character", b =>
                {
                    b.HasOne("DataBase.DbEntity.Account", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.DbEntity.GameClass", "GameClass")
                        .WithMany("Characters")
                        .HasForeignKey("GameClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("GameClass");
                });

            modelBuilder.Entity("DataBase.DbEntity.CharacterRoom", b =>
                {
                    b.HasOne("DataBase.DbEntity.Character", "Character")
                        .WithMany("CharacterRoom")
                        .HasForeignKey("CharacterId");

                    b.HasOne("DataBase.DbEntity.Room", "Room")
                        .WithMany("CharacterRooms")
                        .HasForeignKey("RoomId");

                    b.Navigation("Character");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DataBase.DbEntity.Room", b =>
                {
                    b.HasOne("DataBase.DbEntity.Account", "Account")
                        .WithMany("Rooms")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DataBase.DbEntity.Account", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("DataBase.DbEntity.Character", b =>
                {
                    b.Navigation("CharacterRoom");
                });

            modelBuilder.Entity("DataBase.DbEntity.GameClass", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("DataBase.DbEntity.Room", b =>
                {
                    b.Navigation("CharacterRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
